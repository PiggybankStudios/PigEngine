[ ] MemArenaType_PagedHeap

# A dumping ground for any and all notes and TODO lists
	[!] Make sure we select the swap interval properly
		// The glfwSwapInterval call seems to have a lot of quirks in various graphics drivers.
		// Our best bet might be to set it to zero and never touch it since GLFW docs mention some drivers not allowing setting back to zero after non-zero value is passed
		// Then we need to do some sort of detection of whether the glfwSwapBuffers function is frame syncing us or not and if not then we can do our own frame sync stuff.
	( ) Having multiple windows opened forces us to wait for the monitor vertical sync multiple times
	[ ] Update loop: frame manual flip synchronization
	{ } Add an installer?
	[ ] Can we make sure windows don't get lost in the void between monitors when multiple monitors are being used
	[ ] Ignore the first click when the window wasn't focused
	[ ] Add a system that automatically tracks how long various sections of the intitialization are taking and produces a reasonably even loading bar section scaling
	( ) Are we waiting for the audio thread to exit before closing the program? Are assertions causing crashes on the audio thread?
	[ ] Add convertNewLines options to ReadFileContents and WriteEntireFile
	[ ] Add a debug visual to show the status of the task queue and the worker threads (what task ID they are working on and how long they've been working on it)
	[ ] Add support for fullscreen
	( ) Make sure all the platform file functions are thread safe
	[ ] Use the line building stuff of the StringFifo_t in the platform debug output Fifo
	[!] Switch audio devices on primary device changed
	[ ] 

# Gylib
	{ } gy_collision.h
	{ } gy_rays.h
	[ ] VarArray max length option
	[ ] gy_fifo.h
	( ) There seems to be something wrong with our quaternion implementation. Angles are doubled when trying to do Axis + Angle method to generate a quaternion
	[ ] Add a cube sphere implementation in gy_primitives.h
	[ ] Fill out MemArenaVerify for all memory arena types
	[ ] Fill out ReallocMem for all memory arena types
	[ ] 

# Engine
	[!] Do a debug dump when an assertion fails
	[!] Update the name we give to a debug console dump so it uses the local time for a readable time in the file name
	[ ] Improve the audio debug window
	- Line representing 0 - Ms Ticks - Selection - Replay
	[ ] Hover to readout actual sample values
	[ ] Change the way we render transformed vector image parts by using a matrix in renderContext rather than making separate functions for each type of transformation
	[ ] Add support for ellipses (not just circles)
	[ ] Add a confirmation dialogue
	[ ] Add a GIF export editor AppState that allows you to see and manage what portion of the captured frames you'd like to export
	[ ] Add a UI button implementation
	[ ] Add a UI checkbox implementation
	[ ] Add a UI combobox implementation
	[ ] Add a resource loading/parsing system
	[?] MIDI keyboard support
	[ ] Streaming sampled audio output
	[?] Entity Component System?
	[ ] Zip compression/decompression
	( ) Assertions in GetStartupOptions in release mode are not really clear to the user. The program just starts and immediately exits
	[ ] Add support for replace colors with the new dynamic shader uniforms (or maybe make it a proper uniform but make it an array?)
	[ ] Debug visual for resources
	[?] Did we like the EaseMover_t implementation we made in PCQ? Maybe we should get that moved over here?
	[ ] Debug visual for input events
	[ ] Add a system for localization of strings
	( ) Why are text stylings not working in notifications? Why does it crash with an OpenGL error when I do underline? Is it only when we do SelectDefaultFontFace??
	[ ] Finish adding support for adding new images to a font pack AFTER it originally was generated
	[ ] Add support for clicking on notifications to take you either to the source line that generated the notification OR if the notification is augmented with a specific filepath, that path
	[ ] Add some way to dismiss notifications
	[ ] Make notifications show up in 1 of the 4 corners, based on context from the game so they don't get in the way as often
	( ) We are going to need some way to get the ProgramTime (and possible SystemTime and LocalTime) into PigPostReload!
	[ ] Debug overlay to enable visual of the name of what the mouse is hovering over currently
	[ ] The beveled drawing that I normally do by drawing the text twice should be an option that you can enable for the font flow somehow (so that uncolorable glyphs don't get messed up)
	[!] Add support for "Handling" a InputEvent_t and therefore handling it's related events and keys/btns
	[ ] Add support for parsing FBX files
		[ ] Vertex Data
		[ ] Animation Data
		[ ] Using the animation data to actually animate a model
	[ ] Add a proper AppState system
	[ ] Add a notification for taking screenshots but make sure the notification doesn't show up when rendering a screenshot
	[ ] Make sure the GIF frames are rendered as if we are running at 50Hz so time is preserved in the GIF output
	[ ] Once we have debug commands add something akin to "thread_ids" that will read out all relevant IDs for threads
	[ ] Add debug commands that allow us to change the timestep to a fixed amount. Basically allowing us to slow down time across the entire application
	[ ] Add debug commands that allow us to set up key bindings to other debug commands
	[ ] Make the command parsing stuff for debug commands automatically handle quotation marks around arguments and escape sequences in the quotes

# Web Assembly TODO
	[ ] How do I do a game loop?
	[ ] Can I do any multi threading?
	[ ] Can I have a separate wasm like a dll that gets loaded?
	[ ] What does the html template have to contain to make things work?

# Twitch Links and Notes
	[ ] Take a look at JUCE - 2kirbs
	[ ] 

//Unicode Reference
@ "http://www.unicode.org/Public/UNIDATA/"
// Audio Envelope calculation and Compressor Implementation
@ "https://christianfloisand.wordpress.com/2014/06/09/dynamics-processing-compressorlimiter-part-1/"

# Example SVG Paths:
	@Triangle:      "m 20.045214,237.66616 2.939965,-26.99422 29.666917,4.27632 z"
	@Straight line: "M 6.6145832,252.20982 52.916666,229.90923"
	@Mouth:         "M 52.919365,289.24918 C 41.159506,289.51645 40.090428,277.48932 40.090428,277.48932 h 25.123336 c 0,0 0.53454,11.75986 -12.294399,11.75986 z"
	@Curvy Line:    "m 15.497024,274.32143 c 35.907736,-5.29167 4.157738,-24.19048 20.788691,-37.04167 16.630951,-12.85119 21.544642,20.78869 35.52976,5.29167 13.985118,-15.49703 -8.693452,-35.52976 -8.693452,-35.52976"

# GLSL Preprocessor Default Definitions
	[ ] __METAL_VERSION__ = 120 (Metal version 1.2 patch 0) - (only defined for metal compiler)
	[ ] __METAL_MACOS__ - Defined if compiled with the MacOS Metal Language
	[ ] __METAL_IOS__ - Defined if compiled with the iOS Metal Language
	[ ] GL_SPIRV = 100 - Defined when compiling for OpenGL SPIR-V
	[ ] VULKAN = 100 - Defined when targeting Vulkan
	[ ] GL_ES = 1 - Defined if compiling in OpenGL ES context
	[ ] GL_core_profile = 1 - All profiles have this macro?
	[ ] GL_compatibility_profile = 1 - Only defined if a compatibility implementation is being used
	[ ] GL_es_profile = 1 - Only defined if ES implementation is being used
	[ ] GL_NV_gpu_shader5 - ?
	[ ] __VERSION__ = 330 (GLSL #version 330) - Will always be defined?
	[ ] __PSSL__ - Defined for Playstation Shading Language?

# GLSL Pragmas
	[ ] #version ### core/compatibility/es
	[ ] #pragma optimize(on/off)
	[ ] #pragma debug(on/off)

# Finished TODO List Items
	[X] OGG audio file parsing
	[X] Add a visual showing that we are recorindg a GIF
	[X] Add support for mouse based view rotation
	[X] Add a UI slider implementation
	[X] Add a UI textbox implementation
	[X] Add support for new added new resources without restarting the game
	[X] Sampled audio output
	[X] WAV audio file parsing
	[X] Make the debug console thread safe! And make it handle building a line from multiple debug outputs before committing to the string fifo
	[X] Add a debug visual for memory usage in various memory arenas
	[X] Add a Win32_ShowMessageBox api function that we use in GyLibAssertFailure
	[X] Add some basic tasks that can be carried out on worker threads (like reading or writing from/to a file)
	(X) Make sure that assertions are handled gracefully while on worker threads
	(X) Test the thread safety of the debug output using the new worker threads
	[X] Add support for queuing tasks that get completed on the worker threads but are implemented by functions in the Engine DLL
	(X) Fix highlight spaces between lines in the debug console
	(X) Fix tab indentation in the debug console
	[X] Add support for opening a file without reading all the contents immediately
	[X] Add support for working line in the StringFifo_t structure
	[X] Monitor Info
	[X] Add in-engine support for GIFs
	[X] Add in-engine support for screenshots
	[X] Try to harden the triangulation process against duplicate and colinear points
	[X] Could we add vector art support somehow?
	[X] Auto-reload shaders gracefully
	[X] Add support for shifting older notifications down in the array when newer notifications leave sooner
	[X] Make a tool that allows us to stitch together a bunch of images into a sprite sheet
	[X] Use sprite sheet to generate custom font
	[X] Add a debug visual (and/or editor) for sprite sheets and meta information on each frame
	[X] Add support for naming SpritSheetFrames and looking them up by names or name substrings
	[X] Add bitmap font loading support
	[X] Add support for rendering keyboard, gamepad, or mouse btn icons in the middle of text using unicode points of some sort
	[X] Metadata added to sprite sheets
	[X] Sanatize ElapsedMs for stuff like window dragging and initial frame time
	[X] Get plaform layer debug output routed to the application to store/display
	[X] Add support for interleve combination of two StringFifo's
	[X] Add support for dumping a ProcessLog_t into the debug output
	[X] Move all of the disparate icon loading into a single sprite sheet
	[X] SpriteSheet_t loading
	(X) Confirm whether exit really does exit immediately (win32_loading.cpp Win32_RenderLoadingScreen)
	(X) KeyRepeated is broken?
	[X] Can we add a system to push marks into the performance graph?
	[X] Assert that TempNumMarks == 0 at end of update loop and other exit points
	[X] File watching
	[X] DLL Reloading
	[X] Switch over to GLAD instead of GLEW
	[X] Fix rendering to multiple windows
	[X] Add WindowEngineInput_t to store window-specific input informations
	[X] Keyboard+Mouse Input
	[X] Controller Input
	[X] Time information
	(X) Check if our daylight savings time handling is working properly for localTime and the Bias value we are using to get the timestamp for it
	[X] Window Icon
	[X] Window Cursors
	[X] Device Context
	[X] Threading
	[X] Performance time measuring stuff
	[X] Re-render view during window resizing events
	[X] Call Pig_Closing
	[X] Basic Font Baking + Rendering
	(X) Figure out the problem with FixedHeap used value being wrong
	[X] Clipboard functions
	[X] ShowFile and ShowSourceFile functions
	{X} Add Audio Support
	[X] VarArray_t
	[X] Test VarArray_t
	[X] BktArray_t
	[X] gy_math.h
	[X] gy_directions.h
	[X] gy_easing.h
	[X] gy_quaternion.h
	[X] gy_random.h
	[X] gy_sorting.h
	[X] gy_time.h
	[X] gy_unicode.h
	[X] gy_parsing.h
	{X} gy_primitives.h
	[X] gy_log.h
	[X] == operator for Color_t
	(X) We should probably add UNUSED() macro to DebugAssert or some option to quickly bundle the two
	[X] Assertions
	[X] Debug Output
	[X] Shader Loading
	[X] Texture Loading
	[X] Vertex Buffer Creation
	[X] Render Context
	[X] Time Helper Functions (Oscillate, Saw, TimeSince, etc)
	[X] Full Render Context
	[X] Render Functions
	[X] Debug Print String (add to buffer in platform layer than then gets drawn at frame flip call time)
	[X] Font Baking + Rendering
	{X} Debug Console
	[X] Performance Overlays (framerate, pie graph)
	[X] Add functions to platform API to get performance sensitive time information
	[X] Store information and render a nice framerate graph
	[X] Create functions to help draw pie graphs
	[X] Add functions that help us easily insert time captures (with names?) and aggregate them together easily into a pie graph
	[X] Add support for obj file parsing
	[X] Add timestamp and ProgramTime info to debug output lines
	[X] Add notification little popups
	[X] Change the way we open up debug overlays to use a little top bar with a bunch of buttons
	[X] Saw and Square waves
	[X] End of list placeholder
#

# Web Assembly Related Tabs
	[ ] "https://clang.llvm.org/docs/DiagnosticsReference.html#wenum-compare-switch"
	[ ] "https://lld.llvm.org/WebAssembly.html"
	[ ] "https://nxmnpg.lemoda.net/1/ld.lld"
	[ ] "https://ariya.io/2019/05/basics-of-memory-access-in-webassembly"
	[ ] "https://frehberg.wordpress.com/webassembly-and-dynamic-memory/"
	[ ] "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Grow"
	[ ] "https://github.com/wingo/walloc/blob/master/test.js"

# Physics Engines List:
	! 3D:
		@ "https://github.com/bulletphysics/bullet3"
		@ "https://github.com/deepmind/mujoco"
		@ "https://github.com/simbody/simbody"
		@ "https://github.com/projectchrono/chrono"
		@ "https://github.com/DanielChappuis/reactphysics3d"
		@ "https://github.com/google-research/tiny-differentiable-simulator"
		@ "https://github.com/RandyGaul/qu3e"
		@ "https://github.com/MADEAPPS/newton-dynamics"
		@ "https://github.com/dartsim/dart"
		@ "https://github.com/sofa-framework/sofa"
		@ "https://bitbucket.org/odedevs/ode"
	! 2D:
		@ "https://github.com/erincatto/box2d"
		@ "https://github.com/google/liquidfun"
		@ "https://github.com/slembcke/Chipmunk2D"
		@ "https://github.com/erincatto/box2d-lite"
		@ "https://github.com/victorfisac/Physac"
	! Here are some articles comparing a few of them:
		@ "https://homes.cs.washington.edu/~todorov/papers/ErezICRA15.pdf"
		@ "https://leggedrobotics.github.io/SimBenchmark/"

Web Assembly Memory
- 0x00000
| 
| //First 1kB is reserved I guess? All string literals start at 0x400 (1024) and are packed in opposite declaration order
| 
| 0x00400 (1024) StringLiteral1
| 0x00408 (1024) StringLiteral0
| 
- 0x10000 (65,536)
| 
| //Stack starts in second page (0x10000+) and goes backwards.
| //Size of stack (starting address) is dependant on string literals total size rounded up to nearest 16 bytes
| 
| 0x103e0 (66,528) StubStackVar7
| 0x103e4 (66,532) StubStackVar6
| 0x103e8 (66,536) StubStackVar5
| 0x103ec (66,540) StubStackVar4
| 0x103f0 (66,544) StubStackVar3
| 0x103f4 (66,548) StubStackVar2
| 0x103f8 (66,552) StubStackVar1
| 0x103fc (66,556) StubStackVar0 (Looks like 1kB of stack)
| 
| 0x10adc (68,316) StackVar3
| 0x10aec (68,332) StackVar2
| 0x10afc (68,348) StackVar1
| 0x10b0c (68,364) StackVar0
| 
| 
- 0x20000 (131,072)
| 
| 
- 0x30000 (196,608)
| 
| 
- 0x40000 (262,144)
| 
| 
- 0x50000 (327,680)
| 
| 
- 0x60000 (393,216)
| 
| 
- 0x70000 (458,752)
